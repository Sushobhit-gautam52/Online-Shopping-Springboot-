package com.profileservice.app.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.profileservice.app.security.JwtAuthenticationEntryPoint;
import com.profileservice.app.security.JwtAuthenticationFilter;


@Configuration
public class SecurityConfig {
	 @Autowired
	    private JwtAuthenticationEntryPoint point;
	    @Autowired
	    private JwtAuthenticationFilter filter;

	    @Bean
	    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {

	    	
	    	http.csrf(customizer -> customizer.disable())
			.authorizeHttpRequests(request -> request.requestMatchers("/profiles/register","profiles/login").permitAll().anyRequest().authenticated())
			.httpBasic(Customizer.withDefaults())
			.exceptionHandling(ex->ex.authenticationEntryPoint(point))
			.sessionManagement(session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
			.addFilterBefore(filter, UsernamePasswordAuthenticationFilter.class);

	return http.build();
	    	
	    }


}

