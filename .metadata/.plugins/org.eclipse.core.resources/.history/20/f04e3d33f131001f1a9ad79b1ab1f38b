package com.profileservice.app.config;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;

import com.profileservice.app.entity.UserProfile;
import com.profileservice.app.repository.ProfileRepository;

@Configuration
public class AppConfig {
	@Autowired
	ProfileRepository profileRepository;
	@Autowired
	UserDetailsService userDetailsService;
	
	@Bean
	public AuthenticationProvider authenticationProvider()
	{
		DaoAuthenticationProvider provider= new DaoAuthenticationProvider();
		provider.setUserDetailsService(userDetailsService);
		provider.setPasswordEncoder(new BCryptPasswordEncoder(12));
		return provider;
	}
	
//	 @Bean
//	    public UserDetailsService userDetailsService() {
//		 
//		 List<UserDetails> list=new ArrayList<UserDetails>();
////	        UserDetails userDetails = User.builder().
////	                username("vivek")
////	                .password(passwordEncoder().encode("password")).roles("ADMIN").
////	                build();
////	        UserDetails userDetails1 = User.builder().
////	        		username("raj")
////	        		.password(passwordEncoder().encode("password1")).roles("ADMIN").
////	        		build();
//	        
//	        for(UserProfile u:profileRepository.findAll())
//	        {
//	        	
//	        	list.add( User.builder().username(u.getEmailId())
//	        			.password(passwordEncoder().encode(u.getPassword())).roles("ADMIN").build());
//	        	
//	        }
//	        
//	        UserDetails[]brr=new UserDetails[list.size()];
//	        int i=0;
//	        for(UserDetails u:list)
//	        {
//	        	brr[i]=u;
//	        	i++;
//	        }
//	        		
//	        return new InMemoryUserDetailsManager(brr);
//	    }

	   

	    @Bean
	    public AuthenticationManager authenticationManager(AuthenticationConfiguration config) throws Exception {
	        return config.getAuthenticationManager();
	    }

}
